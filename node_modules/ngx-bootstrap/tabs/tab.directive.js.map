{"version":3,"file":"tab.directive.js","sourceRoot":"","sources":["../../.tmp/tabs/tab.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Directive, EventEmitter, HostBinding, Input, Output, TemplateRef, OnInit, OnDestroy, ElementRef, Renderer } from '@angular/core';\nimport { TabsetComponent } from './tabset.component';\n\n@Directive({selector: 'tab, [tab]'})\nexport class TabDirective implements OnInit, OnDestroy {\n  /** tab header text */\n  @Input() public heading: string;\n  /** tab id */\n  @Input() public id: string;\n  /** if true tab can not be activated */\n  @Input() public disabled: boolean;\n  /** if true tab can be removable, additional button will appear */\n  @Input() public removable: boolean;\n  /** if set, will be added to the tab's class atribute */\n  @Input() public get customClass(): string {\n    return this._customClass;\n  }\n\n  public set customClass(customClass: string) {\n    if (this._customClass && this._customClass !== customClass) {\n      this.renderer.setElementClass(this.elementRef.nativeElement, this._customClass, false);\n    }\n\n    this._customClass = customClass;\n\n    if (this._customClass) {\n      this.renderer.setElementClass(this.elementRef.nativeElement, this._customClass, true);\n    }\n  }\n\n  /** tab active state toggle */\n  @HostBinding('class.active')\n  @Input()\n  public get active(): boolean {\n    return this._active;\n  }\n\n  public set active(active: boolean) {\n    if (this._active === active) {\n      return;\n    }\n    if (this.disabled && active || !active) {\n      if (this._active && !active) {\n        this.deselect.emit(this);\n        this._active = active;\n      }\n\n      return;\n    }\n\n    this._active = active;\n    this.select.emit(this);\n    this.tabset.tabs.forEach((tab: TabDirective) => {\n      if (tab !== this) {\n        tab.active = false;\n      }\n    });\n  }\n\n  /** fired when tab became active, $event:Tab equals to selected instance of Tab component */\n  @Output() public select: EventEmitter<TabDirective> = new EventEmitter();\n  /** fired when tab became inactive, $event:Tab equals to deselected instance of Tab component */\n  @Output() public deselect: EventEmitter<TabDirective> = new EventEmitter();\n  /** fired before tab will be removed, $event:Tab equals to instance of removed tab */\n  @Output() public removed: EventEmitter<TabDirective> = new EventEmitter();\n\n  @HostBinding('class.tab-pane') public addClass: boolean = true;\n\n  public headingRef: TemplateRef<any>;\n  public tabset: TabsetComponent;\n  protected _active: boolean;\n  protected _customClass: string;\n\n  public constructor(tabset: TabsetComponent, public elementRef: ElementRef, public renderer: Renderer) {\n    this.tabset = tabset;\n    this.tabset.addTab(this);\n  }\n\n  public ngOnInit(): void {\n    this.removable = this.removable;\n  }\n\n  public ngOnDestroy(): void {\n    this.tabset.removeTab(this, {reselect: false, emit: false});\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}