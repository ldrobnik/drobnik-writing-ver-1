{"version":3,"file":"modal-backdrop.component.js","sourceRoot":"","sources":["../../.tmp/modal/modal-backdrop.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,UAAU,EAAU,QAAQ,EAAE,MAAM,eAAe,CAAC;AAExE,OAAO,EAAE,SAAS,EAAE,MAAM,uBAAuB,CAAC;AAClD,OAAO,EAAE,KAAK,EAAE,MAAM,+BAA+B,CAAC;AACtD,OAAO,EAAE,KAAK,EAAE,MAAM,sBAAsB,CAAC;AAE7C;IAGE,8BAAmB,OAA6B;QAFzC,YAAO,GAAY,IAAI,CAAC;QAG7B,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAC/B,CAAC;IACH,2BAAC;AAAD,CAAC,AAND,IAMC;;AAED,8EAA8E;AAO9E;IA4BE,gCAAmB,OAAmB,EAAE,QAAkB;QAFhD,aAAQ,GAAG,KAAK,CAAC;QAGzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IA9BD,sBAAW,8CAAU;aAArB;YACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;QAC1B,CAAC;aAED,UAAsB,KAAc;YAClC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,yFAAyF;QAC3F,CAAC;;;OALA;IAOD,sBAAW,2CAAO;aAAlB;YACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAmB,KAAc;YAC/B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,KAAG,SAAS,CAAC,EAAI,EAAE,KAAK,CAAC,CAAC;YACpF,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBACb,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,KAAG,SAAS,CAAC,IAAM,EAAE,KAAK,CAAC,CAAC;YACxF,CAAC;QACH,CAAC;;;OARA;IAqBD,yCAAQ,GAAR;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,KAAG,SAAS,CAAC,IAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YAChG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QAC3C,CAAC;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAvCU,sBAAsB;QANlC,SAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,QAAQ,EAAE,EAAE;YACZ,2BAA2B;YAC3B,IAAI,EAAE,EAAC,OAAO,EAAE,SAAS,CAAC,QAAQ,EAAC;SACpC,CAAC;yCA6B4B,UAAU,EAAY,QAAQ;OA5B/C,sBAAsB,CAwClC;IAAD,6BAAC;CAAA,AAxCD,IAwCC;SAxCY,sBAAsB","sourcesContent":["import { Component, ElementRef, OnInit, Renderer } from '@angular/core';\n\nimport { ClassName } from './modal-options.class';\nimport { isBs3 } from '../utils/ng2-bootstrap-config';\nimport { Utils } from '../utils/utils.class';\n\nexport class ModalBackdropOptions {\n  public animate: boolean = true;\n\n  public constructor(options: ModalBackdropOptions) {\n    Object.assign(this, options);\n  }\n}\n\n/** This component will be added as background layout for modals if enabled */\n@Component({\n  selector: 'bs-modal-backdrop',\n  template: '',\n  // tslint:disable-next-line\n  host: {'class': ClassName.BACKDROP}\n})\nexport class ModalBackdropComponent implements OnInit {\n  public get isAnimated(): boolean {\n    return this._isAnimated;\n  }\n\n  public set isAnimated(value: boolean) {\n    this._isAnimated = value;\n    // this.renderer.setElementClass(this.element.nativeElement, `${ClassName.FADE}`, value);\n  }\n\n  public get isShown(): boolean {\n    return this._isShown;\n  }\n\n  public set isShown(value: boolean) {\n    this._isShown = value;\n    this.renderer.setElementClass(this.element.nativeElement, `${ClassName.IN}`, value);\n    if (!isBs3()) {\n      this.renderer.setElementClass(this.element.nativeElement, `${ClassName.SHOW}`, value);\n    }\n  }\n\n  public element: ElementRef;\n  public renderer: Renderer;\n\n  protected _isAnimated: boolean;\n  protected _isShown = false;\n\n  public constructor(element: ElementRef, renderer: Renderer) {\n    this.element = element;\n    this.renderer = renderer;\n  }\n\n  ngOnInit(): void {\n    if (this.isAnimated) {\n      this.renderer.setElementClass(this.element.nativeElement, `${ClassName.FADE}`, this.isAnimated);\n      Utils.reflow(this.element.nativeElement);\n    }\n    this.isShown = true;\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}