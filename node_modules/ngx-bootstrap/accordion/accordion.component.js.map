{"version":3,"file":"accordion.component.js","sourceRoot":"","sources":["../../.tmp/accordion/accordion.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAEjD,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;AAErD,mGAAmG;AAanG;IAME,4BAAmB,MAAuB;QAFhC,WAAM,GAA8B,EAAE,CAAC;QAG/C,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAC9B,CAAC;IAEM,6CAAgB,GAAvB,UAAwB,SAAkC;QACxD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACtB,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,KAA8B;YACjD,EAAE,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;gBACxB,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;YACvB,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,qCAAQ,GAAf,UAAgB,KAA8B;QAC5C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IAEM,wCAAW,GAAlB,UAAmB,KAA8B;QAC/C,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACvC,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC/B,CAAC;IACH,CAAC;IA7BQ;QAAR,KAAK,EAAE;;2DAA6B;IAF1B,kBAAkB;QAZ9B,SAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,QAAQ,EAAE,2BAA2B;YACrC,2BAA2B;YAC3B,IAAI,EAAE;gBACJ,iCAAiC;gBACjC,6BAA6B,EAAC,aAAa;gBAC3C,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,aAAa;gBACpB,KAAK,EAAE,gBAAgB;aACxB;SACF,CAAC;yCAO2B,eAAe;OAN/B,kBAAkB,CAgC9B;IAAD,yBAAC;CAAA,AAhCD,IAgCC;SAhCY,kBAAkB","sourcesContent":["import { Component, Input } from '@angular/core';\nimport { AccordionPanelComponent } from './accordion-group.component';\nimport { AccordionConfig } from './accordion.config';\n\n/** Displays collapsible content panels for presenting information in a limited amount of space. */\n@Component({\n  selector: 'accordion',\n  template: `<ng-content></ng-content>`,\n  // tslint:disable-next-line\n  host: {\n    //'[.class.panel-group]': 'true',\n    '[attr.aria-multiselectable]':'closeOthers',\n    role: 'tablist',\n    class: 'panel-group',\n    style: 'display: block'\n  }\n})\nexport class AccordionComponent {\n  /** if `true` expanding one item will close all others */\n  @Input() public closeOthers: boolean;\n\n  protected groups: AccordionPanelComponent[] = [];\n\n  public constructor(config: AccordionConfig) {\n    Object.assign(this, config);\n  }\n\n  public closeOtherPanels(openGroup: AccordionPanelComponent): void {\n    if (!this.closeOthers) {\n      return;\n    }\n\n    this.groups.forEach((group: AccordionPanelComponent) => {\n      if (group !== openGroup) {\n        group.isOpen = false;\n      }\n    });\n  }\n\n  public addGroup(group: AccordionPanelComponent): void {\n    this.groups.push(group);\n  }\n\n  public removeGroup(group: AccordionPanelComponent): void {\n    let index = this.groups.indexOf(group);\n    if (index !== -1) {\n      this.groups.splice(index, 1);\n    }\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}