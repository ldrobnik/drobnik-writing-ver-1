{"version":3,"file":"bs-datepicker.component.js","sourceRoot":"","sources":["../../.tmp/datepicker/bs-datepicker.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EACL,SAAS,EACT,UAAU,EACV,YAAY,EACZ,KAAK,EAGL,MAAM,EACN,QAAQ,EACR,gBAAgB,EACjB,MAAM,eAAe,CAAC;AAEvB,OAAO,EAAE,sBAAsB,EAAE,MAAM,8CAA8C,CAAC;AACtF,OAAO,EAAE,8BAA8B,EAAE,MAAM,+CAA+C,CAAC;AAE/F,OAAO,0BAA0B,CAAC;AAOlC;IAyDE,+BAAY,WAAuB,EACvB,SAAmB,EACnB,iBAAmC,EACnC,GAA2B;QA3DvC;;WAEG;QACM,cAAS,GAAwC,QAAQ,CAAC;QACnE;;;WAGG;QACM,aAAQ,GAAG,OAAO,CAAC;QAEnB,iBAAY,GAAG,IAAI,CAAC;QAC7B;;;WAGG;QACM,cAAS,GAAG,MAAM,CAAC;QAkClB,kBAAa,GAAuB,IAAI,YAAY,EAAE,CAAC;QAEvD,kBAAa,GAAmB,EAAE,CAAC;QAS3C,IAAI,CAAC,WAAW,GAAG,GAAG;aACnB,YAAY,CAAiC,WAAW,EAAE,iBAAiB,EAAE,SAAS,CAAC,CAAC;QAC3F,yDAAyD;QACzD,gCAAgC;QAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;QACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;IAC5C,CAAC;IA7CD,sBAAW,yCAAM;QAJjB;;WAEG;aAEH;YACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;QAClC,CAAC;aAED,UAAkB,KAAc;YAC9B,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YAAC,CAAC;YAAC,IAAI,CAAC,CAAC;gBAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YAAC,CAAC;QACnD,CAAC;;;OAJA;IAqBD,sBAAI,0CAAO;aAAX,UAAY,KAAW;YACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC;;;OAAA;IAqBD;;;OAGG;IACH,oCAAI,GAAJ;QAAA,iBA2BC;QA1BC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW;aACnC,MAAM,CAAC,8BAA8B,CAAC;aACtC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC;aAClB,QAAQ,CAAC,EAAC,UAAU,EAAE,IAAI,CAAC,SAAS,EAAC,CAAC;aACtC,IAAI,CAAC,EAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAC,CAAC,CAAC;QAErC,uBAAuB;QACvB,8BAA8B;QAC9B,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;QAEnD,uDAAuD;QACvD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,UAAC,KAAW;YACvC,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7C,CAAC,CAAC,CAAC;QAEH,8CAA8C;QAC9C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ;aACjD,WAAW,CAAC,SAAS,CAAC,UAAC,KAAW;YACjC,EAAE,CAAC,CAAC,KAAK,KAAK,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAAA,MAAM,CAAC;YAAC,CAAC;YACvC,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC/B,KAAI,CAAC,IAAI,EAAE,CAAC;QACd,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED;;;OAGG;IACH,oCAAI,GAAJ;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QAC1B,CAAC;IACH,CAAC;IAED;;;OAGG;IACH,sCAAM,GAAN;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QACrB,CAAC;QAED,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,wCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACtB,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,IAAI,EAAE,cAAM,OAAA,KAAI,CAAC,IAAI,EAAE,EAAX,CAAW;SACxB,CAAC,CAAC;IACL,CAAC;IAED,2CAAW,GAAX;QACE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAlIQ;QAAR,KAAK,EAAE;;4DAA2D;IAK1D;QAAR,KAAK,EAAE;;2DAAoB;IAEnB;QAAR,KAAK,EAAE;;+DAAqB;IAKpB;QAAR,KAAK,EAAE;;4DAAoB;IAM5B;QADC,KAAK,EAAE;;;uDAGP;IASS;QAAT,MAAM,EAAE;kCAAU,YAAY;0DAAM;IAI3B;QAAT,MAAM,EAAE;kCAAW,YAAY;2DAAM;IAQtC;QADC,KAAK,EAAE;kCACW,IAAI;yCAAJ,IAAI;wDAGtB;IAES;QAAT,MAAM,EAAE;kCAAgB,YAAY;gEAA4B;IAlDtD,qBAAqB;QALjC,SAAS,CAAC;YACT,QAAQ,EAAE,8BAA8B;YACxC,QAAQ,EAAE,cAAc;YACxB,QAAQ,EAAE,GAAG;SACd,CAAC;yCA0DyB,UAAU;YACZ,QAAQ;YACA,gBAAgB;YAC9B,sBAAsB;OA5D5B,qBAAqB,CAuIjC;IAAD,4BAAC;CAAA,AAvID,IAuIC;SAvIY,qBAAqB","sourcesContent":["import {\n  Component, ComponentRef,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer,\n  ViewContainerRef\n} from '@angular/core';\nimport { ComponentLoader } from '../component-loader/component-loader.class';\nimport { ComponentLoaderFactory } from '../component-loader/component-loader.factory';\nimport { BsDatepickerContainerComponent } from './themes/bs/bs-datepicker-container.component';\nimport { Subscription } from 'rxjs/Subscription';\nimport 'rxjs/add/operator/filter';\n\n@Component({\n  selector: 'bs-datepicker,[bsDatepicker]',\n  exportAs: 'bsDatepicker',\n  template: ' '\n})\nexport class BsDatepickerComponent implements OnInit, OnDestroy {\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  @Input() placement: 'top' | 'bottom' | 'left' | 'right' = 'bottom';\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  @Input() triggers = 'click';\n\n  @Input() outsideClick = true;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n  @Input() container = 'body';\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  @Input()\n  public get isOpen(): boolean {\n    return this._datepicker.isShown;\n  }\n\n  public set isOpen(value: boolean) {\n    if (value) { this.show(); } else { this.hide(); }\n  }\n\n  /**\n   * Emits an event when the popover is shown\n   */\n  @Output() onShown: EventEmitter<any>;\n  /**\n   * Emits an event when the popover is hidden\n   */\n  @Output() onHidden: EventEmitter<any>;\n\n  // here will be parsed options and set defaults\n  // @Input()  config: BsDatePickerOptions;\n  // configChange: EventEmitter<BsDatePickerOptions> = new EventEmitter();\n\n  _bsValue: Date;\n  @Input()\n  set bsValue(value: Date) {\n    this._bsValue = value;\n    this.bsValueChange.emit(value);\n  }\n\n  @Output() bsValueChange: EventEmitter<Date> = new EventEmitter();\n\n  protected subscriptions: Subscription[] = [];\n\n  private _datepicker: ComponentLoader<BsDatepickerContainerComponent>;\n  private _datepickerRef: ComponentRef<BsDatepickerContainerComponent>;\n\n  constructor(_elementRef: ElementRef,\n              _renderer: Renderer,\n              _viewContainerRef: ViewContainerRef,\n              cis: ComponentLoaderFactory) {\n    this._datepicker = cis\n      .createLoader<BsDatepickerContainerComponent>(_elementRef, _viewContainerRef, _renderer);\n    // .provide({provide: PopoverConfig, useValue: _config});\n    // Object.assign(this, _config);\n    this.onShown = this._datepicker.onShown;\n    this.onHidden = this._datepicker.onHidden;\n  }\n\n  /**\n   * Opens an element’s datepicker. This is considered a “manual” triggering of\n   * the datepicker.\n   */\n  show(): void {\n    if (this._datepicker.isShown) {\n      return;\n    }\n\n    this._datepickerRef = this._datepicker\n      .attach(BsDatepickerContainerComponent)\n      .to(this.container)\n      .position({attachment: this.placement})\n      .show({placement: this.placement});\n\n    // link with datepicker\n    // set initial value of picker\n    this._datepickerRef.instance.value = this._bsValue;\n\n    // if date changes from external source (model -> view)\n    this.bsValueChange.subscribe((value: Date) => {\n      this._datepickerRef.instance.value = value;\n    });\n\n    // if date changes from picker (view -> model)\n    this.subscriptions.push(this._datepickerRef.instance\n      .valueChange.subscribe((value: Date) => {\n        if (value === this._bsValue) {return; }\n        this.bsValueChange.emit(value);\n        this.hide();\n      }));\n  }\n\n  /**\n   * Closes an element’s datepicker. This is considered a “manual” triggering of\n   * the datepicker.\n   */\n  hide(): void {\n    if (this.isOpen) {\n      this._datepicker.hide();\n    }\n  }\n\n  /**\n   * Toggles an element’s datepicker. This is considered a “manual” triggering of\n   * the datepicker.\n   */\n  toggle(): void {\n    if (this.isOpen) {\n      return this.hide();\n    }\n\n    this.show();\n  }\n\n  ngOnInit(): any {\n    this._datepicker.listen({\n      outsideClick: this.outsideClick,\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n  }\n\n  ngOnDestroy(): any {\n    this._datepicker.dispose();\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}